"use strict";var Challenge=require("../models/Challenge");exports.createChallenge=function(r,t){var n,a,s,l,c,u;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return n=r.body,a=n.title,s=n.description,l=n.due_date,c=n.challenge_image,e.prev=1,e.next=4,regeneratorRuntime.awrap(Challenge.create({title:a,description:s,due_date:l,challenge_image:c}));case 4:u=e.sent,t.status(201).json({message:"Challenge created successfully",challenge:u}),e.next=12;break;case 8:e.prev=8,e.t0=e.catch(1),console.error("Error during challenge creation:",e.t0.message),t.status(500).json({error:e.t0.message});case 12:case"end":return e.stop()}},null,null,[[1,8]])},exports.getChallenges=function(e,r){var t;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,regeneratorRuntime.awrap(Challenge.findAll());case 3:t=e.sent,r.status(200).json(t),e.next=11;break;case 7:e.prev=7,e.t0=e.catch(0),console.error("Error fetching challenges:",e.t0.message),r.status(500).json({error:e.t0.message});case 11:case"end":return e.stop()}},null,null,[[0,7]])},exports.updateChallenge=function(r,t){var n,a,s,l,c,u,o;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return n=r.params.id,a=r.body,s=a.title,l=a.description,c=a.due_date,u=a.challenge_image,e.prev=2,e.next=5,regeneratorRuntime.awrap(Challenge.findByPk(n));case 5:if(o=e.sent){e.next=8;break}return e.abrupt("return",t.status(404).json({error:"Challenge not found"}));case 8:return e.next=10,regeneratorRuntime.awrap(o.update({title:s,description:l,due_date:c,challenge_image:u}));case 10:t.status(200).json({message:"Challenge updated successfully",challenge:o}),e.next=17;break;case 13:e.prev=13,e.t0=e.catch(2),console.error("Error during challenge update:",e.t0.message),t.status(500).json({error:e.t0.message});case 17:case"end":return e.stop()}},null,null,[[2,13]])},exports.deleteChallenge=function(r,t){var n,a;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return n=r.params.id,e.prev=1,e.next=4,regeneratorRuntime.awrap(Challenge.findByPk(n));case 4:if(a=e.sent){e.next=7;break}return e.abrupt("return",t.status(404).json({error:"Challenge not found"}));case 7:return e.next=9,regeneratorRuntime.awrap(a.destroy());case 9:t.status(200).json({message:"Challenge deleted successfully"}),e.next=16;break;case 12:e.prev=12,e.t0=e.catch(1),console.error("Error during challenge deletion:",e.t0.message),t.status(500).json({error:e.t0.message});case 16:case"end":return e.stop()}},null,null,[[1,12]])};
//# sourceMappingURL=challengeController.min.js.map
