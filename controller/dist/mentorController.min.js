"use strict";var Mentor=require("../models/Mentor");exports.createMentor=function(r,t){var n,a;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return n=r.body.name,e.prev=1,e.next=4,regeneratorRuntime.awrap(Mentor.create({name:n}));case 4:return a=e.sent,e.abrupt("return",t.status(201).json({message:"Mentor created successfully",mentor:a}));case 8:return e.prev=8,e.t0=e.catch(1),console.error("Error during mentor creation:",e.t0.message),e.abrupt("return",t.status(500).json({message:"Terjadi kesalahan saat membuat mentor.",error:e.t0}));case 12:case"end":return e.stop()}},null,null,[[1,8]])},exports.getMentors=function(e,r){var t;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,regeneratorRuntime.awrap(Mentor.findAll());case 3:return t=e.sent,e.abrupt("return",r.status(200).json(t));case 7:return e.prev=7,e.t0=e.catch(0),console.error("Error fetching mentors:",e.t0.message),e.abrupt("return",r.status(500).json({message:"Terjadi kesalahan saat mengambil mentor.",error:e.t0}));case 11:case"end":return e.stop()}},null,null,[[0,7]])},exports.updateMentor=function(r,t){var n,a,s;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return n=r.params.id,a=r.body.name,e.prev=2,e.next=5,regeneratorRuntime.awrap(Mentor.findByPk(n));case 5:if(s=e.sent){e.next=8;break}return e.abrupt("return",t.status(404).json({message:"Mentor not found"}));case 8:return e.next=10,regeneratorRuntime.awrap(s.update({name:a}));case 10:return e.abrupt("return",t.status(200).json({message:"Mentor updated successfully",mentor:s}));case 13:return e.prev=13,e.t0=e.catch(2),console.error("Error during mentor update:",e.t0.message),e.abrupt("return",t.status(500).json({message:"Terjadi kesalahan saat memperbarui mentor.",error:e.t0}));case 17:case"end":return e.stop()}},null,null,[[2,13]])},exports.deleteMentor=function(r,t){var n,a;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return n=r.params.id,e.prev=1,e.next=4,regeneratorRuntime.awrap(Mentor.findByPk(n));case 4:if(a=e.sent){e.next=7;break}return e.abrupt("return",t.status(404).json({message:"Mentor not found"}));case 7:return e.next=9,regeneratorRuntime.awrap(a.destroy());case 9:return e.abrupt("return",t.status(200).json({message:"Mentor deleted successfully"}));case 12:return e.prev=12,e.t0=e.catch(1),console.error("Error during mentor deletion:",e.t0.message),e.abrupt("return",t.status(500).json({message:"Terjadi kesalahan saat menghapus mentor.",error:e.t0}));case 16:case"end":return e.stop()}},null,null,[[1,12]])};
//# sourceMappingURL=mentorController.min.js.map
