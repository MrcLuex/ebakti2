{"version":3,"sources":["taskSubmissionController.js"],"names":["TaskSubmission","require","exports","createTaskSubmission","req","res","body","task_id","user_id","submission_date","score","feedback","status","create","newSubmission","json","message","submission","console","error","getTaskSubmissions","findAll","submissions","updateTaskSubmission","id","params","findByPk","update","deleteTaskSubmission","destroy"],"mappings":"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","sourcesContent":["// controllers/taskSubmissionController.js\r\nconst TaskSubmission = require('../models/TaskSubmission');\r\n\r\nexports.createTaskSubmission = async (req, res) => {\r\n    const { task_id, user_id, submission_date, score, feedback, status } = req.body;\r\n\r\n    try {\r\n        const newSubmission = await TaskSubmission.create({\r\n            task_id,\r\n            user_id,\r\n            submission_date,\r\n            score,\r\n            feedback,\r\n            status,\r\n        });\r\n\r\n        return res.status(201).json({\r\n            message: 'Task submission created successfully',\r\n            submission: newSubmission,\r\n        });\r\n    } catch (error) {\r\n        console.error(\"Error during task submission creation:\", error.message);\r\n        return res.status(500).json({ message: 'Terjadi kesalahan saat membuat pengumpulan tugas.', error });\r\n    }\r\n};\r\n\r\nexports.getTaskSubmissions = async (req, res) => {\r\n    try {\r\n        const submissions = await TaskSubmission.findAll();\r\n        return res.status(200).json(submissions);\r\n    } catch (error) {\r\n        console.error(\"Error fetching task submissions:\", error.message);\r\n        return res.status(500).json({ message: 'Terjadi kesalahan saat mengambil pengumpulan tugas.', error });\r\n    }\r\n};\r\n\r\nexports.updateTaskSubmission = async (req, res) => {\r\n    const { id } = req.params;\r\n    const { task_id, user_id, submission_date, score, feedback, status } = req.body;\r\n\r\n    try {\r\n        const submission = await TaskSubmission.findByPk(id);\r\n        if (!submission) {\r\n            return res.status(404).json({ message: 'Task submission not found' });\r\n        }\r\n\r\n        await submission.update({\r\n            task_id,\r\n            user_id,\r\n            submission_date,\r\n            score,\r\n            feedback,\r\n            status,\r\n        });\r\n\r\n        return res.status(200).json({\r\n            message: 'Task submission updated successfully',\r\n            submission,\r\n        });\r\n    } catch (error) {\r\n        console.error(\"Error during task submission update:\", error.message);\r\n        return res.status(500).json({ message: 'Terjadi kesalahan saat memperbarui pengumpulan tugas.', error });\r\n    }\r\n};\r\n\r\nexports.deleteTaskSubmission = async (req, res) => {\r\n    const { id } = req.params;\r\n\r\n    try {\r\n        const submission = await TaskSubmission.findByPk(id);\r\n        if (!submission) {\r\n            return res.status(404).json({ message: 'Task submission not found' });\r\n        }\r\n\r\n        await submission.destroy();\r\n        return res.status(200).json({ message: 'Task submission deleted successfully' });\r\n    } catch (error) {\r\n        console.error(\"Error during task submission deletion:\", error.message);\r\n        return res.status(500).json({ message: 'Terjadi kesalahan saat menghapus pengumpulan tugas.', error });\r\n    }\r\n};"],"file":"taskSubmissionController.dev.js"}