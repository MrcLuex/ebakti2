{"version":3,"sources":["challengeSubmissionController.js"],"names":["ChallengeSubmission","require","exports","createChallengeSubmission","req","res","_req$body","challenge_id","user_id","submission_file","status","newSubmission","regeneratorRuntime","async","_context","prev","next","body","awrap","create","sent","json","message","t0","error","stop","submissions","_context2","findAll","console","id","params","findByPk","submission","update","_context3","deleteChallengeSubmission","_context4","abrupt","destroy"],"mappings":"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","file":"challengeSubmissionController.min.js","sourcesContent":["const ChallengeSubmission = require('../models/ChallengeSubmission');\r\n\r\n// Create Challenge Submission\r\nexports.createChallengeSubmission = async (req, res) => {\r\n  const { challenge_id, user_id, submission_file, status } = req.body;\r\n\r\n  try {\r\n    const newSubmission = await ChallengeSubmission.create({\r\n      challenge_id,\r\n      user_id,\r\n      submission_file,\r\n      status,\r\n    });\r\n\r\n    res.status(201).json({\r\n      message: 'Challenge submission created successfully',\r\n      submission: newSubmission,\r\n    });\r\n  } catch (error) {\r\n    console.error(\"Error during challenge submission creation:\", error.message);\r\n    res.status(500).json({ error: error.message });\r\n  }\r\n};\r\n\r\n// Get All Challenge Submissions\r\nexports.getChallengeSubmissions = async (req, res) => {\r\n  try {\r\n    const submissions = await ChallengeSubmission.findAll();\r\n    res.status(200).json(submissions);\r\n  } catch (error) {\r\n    console.error(\"Error fetching challenge submissions:\", error.message);\r\n    res.status(500).json({ error: error.message });\r\n  }\r\n};\r\n\r\n// Update Challenge Submission\r\nexports.updateChallengeSubmission = async (req, res) => {\r\n  const { id } = req.params;\r\n  const { challenge_id, user_id, submission_file, status } = req.body;\r\n\r\n  try {\r\n    const submission = await ChallengeSubmission.findByPk(id);\r\n    if (!submission) {\r\n      return res.status(404).json({ error: 'Challenge submission not found' });\r\n    }\r\n\r\n    await submission.update({\r\n      challenge_id,\r\n      user_id,\r\n      submission_file,\r\n      status,\r\n    });\r\n\r\n    res.status(200).json({\r\n      message: 'Challenge submission updated successfully',\r\n      submission,\r\n    });\r\n  } catch (error) {\r\n    console.error(\"Error during challenge submission update:\", error.message);\r\n    res.status(500).json({ error: error.message });\r\n  }\r\n};\r\n\r\n// Delete Challenge Submission\r\nexports.deleteChallengeSubmission = async (req, res) => {\r\n  const { id } = req.params;\r\n\r\n  try {\r\n    const submission = await ChallengeSubmission.findByPk(id);\r\n    if (!submission) {\r\n      return res.status(404).json({ error: 'Challenge submission not found' });\r\n    }\r\n\r\n    await submission.destroy();\r\n    res.status(200).json({ message: 'Challenge submission deleted successfully' });\r\n  } catch (error) {\r\n    console.error(\"Error during challenge submission deletion:\", error.message);\r\n    res.status(500).json({ error: error.message });\r\n  }\r\n};"]}