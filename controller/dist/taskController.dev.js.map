{"version":3,"sources":["taskController.js"],"names":["Task","require","exports","createTask","req","res","body","title","description","due_date","status","create","newTask","json","message","task","console","error","getTasks","findAll","tasks","updateTask","id","params","findByPk","update","deleteTask","destroy"],"mappings":"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","sourcesContent":["// controllers/taskController.js\r\nconst Task = require('../models/Task');\r\n\r\nexports.createTask = async (req, res) => {\r\n    const { title, description, due_date, status } = req.body;\r\n\r\n    try {\r\n        const newTask = await Task.create({\r\n            title,\r\n            description,\r\n            due_date,\r\n            status,\r\n        });\r\n\r\n        return res.status(201).json({\r\n            message: 'Task created successfully',\r\n            task: newTask,\r\n        });\r\n    } catch (error) {\r\n        console.error(\"Error during task creation:\", error.message);\r\n        return res.status(500).json({ message: 'Terjadi kesalahan saat membuat tugas.', error });\r\n    }\r\n};\r\n\r\nexports.getTasks = async (req, res) => {\r\n    try {\r\n        const tasks = await Task.findAll();\r\n        return res.status(200).json(tasks);\r\n    } catch (error) {\r\n        console.error(\"Error fetching tasks:\", error.message);\r\n        return res.status(500).json({ message: 'Terjadi kesalahan saat mengambil tugas.', error });\r\n    }\r\n};\r\n\r\nexports.updateTask = async (req, res) => {\r\n    const { id } = req.params;\r\n    const { title, description, due_date, status } = req.body;\r\n\r\n    try {\r\n        const task = await Task.findByPk(id);\r\n        if (!task) {\r\n            return res.status(404).json({ message: 'Task not found' });\r\n        }\r\n\r\n        await task.update({\r\n            title,\r\n            description,\r\n            due_date,\r\n            status,\r\n        });\r\n\r\n        return res.status(200).json({\r\n            message: 'Task updated successfully',\r\n            task,\r\n        });\r\n    } catch (error) {\r\n        console.error(\"Error during task update:\", error.message);\r\n        return res.status(500).json({ message: 'Terjadi kesalahan saat memperbarui tugas.', error });\r\n    }\r\n};\r\n\r\nexports.deleteTask = async (req, res) => {\r\n    const { id } = req.params;\r\n\r\n    try {\r\n        const task = await Task.findByPk(id);\r\n        if (!task) {\r\n            return res.status(404).json({ message: 'Task not found' });\r\n        }\r\n\r\n        await task.destroy();\r\n        return res.status(200).json({ message: 'Task deleted successfully' });\r\n    } catch (error) {\r\n        console.error(\"Error during task deletion:\", error.message);\r\n        return res.status(500).json({ message: 'Terjadi kesalahan saat menghapus tugas.', error });\r\n    }\r\n};"],"file":"taskController.dev.js"}