"use strict";var MedicalHistory=require("../models/MedicalHistory");exports.createMedicalHistory=function(r,t){var a,s,n,i,o,u;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return a=r.body,s=a.user_id,n=a.medical_condition,i=a.medication,o=a.allergies,e.prev=1,e.next=4,regeneratorRuntime.awrap(MedicalHistory.create({user_id:s,medical_condition:n,medication:i,allergies:o}));case 4:return u=e.sent,e.abrupt("return",t.status(201).json({message:"Medical history created successfully",history:u}));case 8:return e.prev=8,e.t0=e.catch(1),console.error("Error during medical history creation:",e.t0.message),e.abrupt("return",t.status(500).json({message:"Terjadi kesalahan saat membuat riwayat medis.",error:e.t0}));case 12:case"end":return e.stop()}},null,null,[[1,8]])},exports.getMedicalHistories=function(e,r){var t;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,regeneratorRuntime.awrap(MedicalHistory.findAll());case 3:return t=e.sent,e.abrupt("return",r.status(200).json(t));case 7:return e.prev=7,e.t0=e.catch(0),console.error("Error fetching medical histories:",e.t0.message),e.abrupt("return",r.status(500).json({message:"Terjadi kesalahan saat mengambil riwayat medis.",error:e.t0}));case 11:case"end":return e.stop()}},null,null,[[0,7]])},exports.updateMedicalHistory=function(r,t){var a,s,n,i,o,u;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return a=r.params.id,s=r.body,n=s.medical_condition,i=s.medication,o=s.allergies,e.prev=2,e.next=5,regeneratorRuntime.awrap(MedicalHistory.findByPk(a));case 5:if(u=e.sent){e.next=8;break}return e.abrupt("return",t.status(404).json({message:"Medical history not found"}));case 8:return e.next=10,regeneratorRuntime.awrap(u.update({medical_condition:n,medication:i,allergies:o}));case 10:return e.abrupt("return",t.status(200).json({message:"Medical history updated successfully",history:u}));case 13:return e.prev=13,e.t0=e.catch(2),console.error("Error during medical history update:",e.t0.message),e.abrupt("return",t.status(500).json({message:"Terjadi kesalahan saat memperbarui riwayat medis.",error:e.t0}));case 17:case"end":return e.stop()}},null,null,[[2,13]])},exports.deleteMedicalHistory=function(r,t){var a,s;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return a=r.params.id,e.prev=1,e.next=4,regeneratorRuntime.awrap(MedicalHistory.findByPk(a));case 4:if(s=e.sent){e.next=7;break}return e.abrupt("return",t.status(404).json({message:"Medical history not found"}));case 7:return e.next=9,regeneratorRuntime.awrap(s.destroy());case 9:return e.abrupt("return",t.status(200).json({message:"Medical history deleted successfully"}));case 12:return e.prev=12,e.t0=e.catch(1),console.error("Error during medical history deletion:",e.t0.message),e.abrupt("return",t.status(500).json({message:"Terjadi kesalahan saat menghapus riwayat medis.",error:e.t0}));case 16:case"end":return e.stop()}},null,null,[[1,12]])};
//# sourceMappingURL=medicalHistoryController.min.js.map
