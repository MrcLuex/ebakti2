{"version":3,"sources":["challengeController.js"],"names":["Challenge","require","exports","createChallenge","req","res","_req$body","title","description","due_date","challenge_image","newChallenge","regeneratorRuntime","async","_context","prev","next","body","awrap","create","sent","status","json","message","t0","error","stop","challenges","_context2","findAll","console","id","_req$body2","challenge","_context3","params","findByPk","abrupt","update","deleteChallenge","_context4","destroy"],"mappings":"aAAA,IAAMA,UAAYC,QAAQ,uBAG1BC,QAAQC,gBAAkB,SAAOC,EAAKC,GAAZ,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OAAAV,EACkCF,EAAIa,KAAtDV,EADgBD,EAChBC,MAAOC,EADSF,EACTE,YAAaC,EADJH,EACIG,SAAUC,EADdJ,EACcI,gBADdI,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAAAJ,mBAAAM,MAIKlB,UAAUmB,OAAO,CAJtBZ,MAAAA,EAAAC,YAAAA,EAAAC,SAAAA,EAAAC,gBAAAA,KAAA,KAAA,EAIhBC,EAJgBG,EAAAM,KAAAf,EAAAgB,OAAA,KAAAC,KAAA,CAAAC,QAAA,iCAKpBhB,UAAKI,IALeG,EAAAE,KAAA,GAAA,MAAA,KAAA,EAAAF,EAAAC,KAAA,EAAAD,EAAAU,GAAAV,EAAA,MAAA,GAQpBJ,QAAAA,MAAAA,mCAAAA,EAAAA,GAAAA,SAJ0CL,EAAAgB,OAJtB,KAAAC,KAAA,CAAAG,MAAAX,EAAAU,GAAAD,UAAA,KAAA,GAAA,IAAA,MAAA,OAAAT,EAAAY,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,MAYpBH,QAAAA,cAAS,SAAAnB,EAAAC,GAAA,IAAAsB,EAAA,OAAAf,mBAAAC,MAAA,SAAAe,GAAA,OAAA,OAAAA,EAAAb,KAAAa,EAAAZ,MAAA,KAAA,EAAA,OAAAY,EAAAb,KAAA,EAAAa,EAAAZ,KAAA,EAAAJ,mBAAAM,MADXlB,UAAA6B,WACW,KAAA,EADUF,EACVC,EAAAR,KAZWf,EAAAgB,OAAA,KAAAC,KAAAK,GAYXC,EAAAZ,KAAA,GAAA,MAAA,KAAA,EAAAY,EAAAb,KAAA,EAAAa,EAAAJ,GAAAI,EAAA,MAAA,GAeXE,QAAQL,MAAM,6BAA8BG,EAAAJ,GAAMD,SA3B5BlB,EAAAgB,OAAA,KAAAC,KAAA,CAAAG,MAAAG,EAAAJ,GAAAD,UAYX,KAAA,GAAA,IAAA,MAAA,OAAAK,EAAAF,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,MAKYD,QAAAA,gBAAO,SAAMF,EAAAA,GAAN,IAAAQ,EAAAC,EAAAzB,EAAAC,EAAAC,EAAAC,EAAAuB,EAAA,OAAArB,mBAAAC,MAAA,SAAAqB,GAAA,OAAA,OAAAA,EAAAnB,KAAAmB,EAAAlB,MAAA,KAAA,EAAA,OAATe,EAArB3B,EAAA+B,OAAqBJ,GAASC,EAkB0B5B,EAAIa,KAAtDV,EAlBwByB,EAkBxBzB,MAAOC,EAlBiBwB,EAkBjBxB,YAAaC,EAlBIuB,EAkBJvB,SAAUC,EAlBNsB,EAkBMtB,gBAlBNwB,EAAAnB,KAAA,EAAAmB,EAAAlB,KAAA,EAAAJ,mBAAAM,MAjBRlB,UAAAoC,SAAAL,IAiBQ,KAAA,EAAA,GAjBRE,EAiBQC,EAAAd,KAAA,CAAAc,EAAAlB,KAAA,EAAA,MAAA,OAAAkB,EAAAG,OAAA,SAjBRhC,EAAAgB,OAAA,KAAAC,KAAA,CAAAG,MAAA,yBAiBQ,KAAA,EAAA,OAAAS,EAAAlB,KAAA,GAAAJ,mBAAAM,MA0BxBe,EAAUK,OAAO,CACrB/B,MAAAA,EAtBNL,YAAAA,EAAwBO,SAAAA,EAAAC,gBAAAA,KALU,KAAA,GAKVL,EAAAgB,OAAA,KAAAC,KAAA,CAAAC,QAAA,iCAAAU,UAAAA,IALUC,EAAAlB,KAAA,GAAA,MAAA,KAAA,GAAAkB,EAAAnB,KAAA,GAAAmB,EAAAV,GAAAU,EAAA,MAAA,GAKVJ,QAAAL,MAAA,iCAAAS,EAAAV,GAAAD,SAEdI,EAAAA,OAAAA,KAFcL,KAAA,CAAAG,MAAAS,EAAAV,GAAAD,UALU,KAAA,GAAA,IAAA,MAAA,OAAAW,EAAAR,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,OAKVxB,QAAAqC,gBAAA,SAAAnC,EAAAC,GAAA,IAAA0B,EAAAE,EAAA,OAAArB,mBAAAC,MAAA,SAAA2B,GAAA,OAAA,OAAAA,EAAAzB,KAAAyB,EAAAxB,MAAA,KAAA,EAAA,OAAAe,EAAA3B,EAAA+B,OAAAJ,GAAAS,EAAAzB,KAAA,EAAAyB,EAAAxB,KAAA,EAAAJ,mBAAAM,MAMJI,UAAKc,SAAAL,IAND,KAAA,EAAA,GAMpB1B,EANoBmC,EAAApB,KAAA,CAAAoB,EAAAxB,KAAA,EAAA,MAAA,OAAAwB,EAAAH,OAAA,SAMpBhC,EAAAgB,OAAA,KAAAC,KAAA,CAAAG,MAAA,yBANoB,KAAA,EAAA,OAAAe,EAAAxB,KAAA,EAAAJ,mBAAAM,MAAAe,EAAAQ,WAAA,KAAA,EAAApC,EAAAgB,OAAA,KAAAC,KAAA,CAAAC,QAAA,mCAAAiB,EAAAxB,KAAA,GAAA,MAAA,KAAA,GAAAwB,EAAAzB,KAAA,GAAAyB,EAAAhB,GAAAgB,EAAA,MAAA,GAAAV,QAAAL,MAAA,mCAAAe,EAAAhB,GAAAD,SAAAlB,EAAAgB,OAAA,KAAAC,KAAA,CAAAG,MAAAe,EAAAhB,GAAAD,UAAA,KAAA,GAAA,IAAA,MAAA,OAAAiB,EAAAd,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA","file":"challengeController.min.js","sourcesContent":["const Challenge = require('../models/Challenge');\r\n\r\n// Create Challenge\r\nexports.createChallenge = async (req, res) => {\r\n  const { title, description, due_date, challenge_image } = req.body;\r\n\r\n  try {\r\n    const newChallenge = await Challenge.create({\r\n      title,\r\n      description,\r\n      due_date,\r\n      challenge_image,\r\n    });\r\n\r\n    res.status(201).json({\r\n      message: 'Challenge created successfully',\r\n      challenge: newChallenge,\r\n    });\r\n  } catch (error) {\r\n    console.error(\"Error during challenge creation:\", error.message);\r\n    res.status(500).json({ error: error.message });\r\n  }\r\n};\r\n\r\n// Get All Challenges\r\nexports.getChallenges = async (req, res) => {\r\n  try {\r\n    const challenges = await Challenge.findAll();\r\n    res.status(200).json(challenges);\r\n  } catch (error) {\r\n    console.error(\"Error fetching challenges:\", error.message);\r\n    res.status(500).json({ error: error.message });\r\n  }\r\n};\r\n\r\n// Update Challenge\r\nexports.updateChallenge = async (req, res) => {\r\n  const { id } = req.params;\r\n  const { title, description, due_date, challenge_image } = req.body;\r\n\r\n  try {\r\n    const challenge = await Challenge.findByPk(id);\r\n    if (!challenge) {\r\n      return res.status(404).json({ error: 'Challenge not found' });\r\n    }\r\n\r\n    await challenge.update({\r\n      title,\r\n      description,\r\n      due_date,\r\n      challenge_image,\r\n    });\r\n\r\n    res.status(200).json({\r\n      message: 'Challenge updated successfully',\r\n      challenge,\r\n    });\r\n  } catch (error) {\r\n    console.error(\"Error during challenge update:\", error.message);\r\n    res.status(500).json({ error: error.message });\r\n  }\r\n};\r\n\r\n// Delete Challenge\r\nexports.deleteChallenge = async (req, res) => {\r\n  const { id } = req.params;\r\n\r\n  try {\r\n    const challenge = await Challenge.findByPk(id);\r\n    if (!challenge) {\r\n      return res.status(404).json({ error: 'Challenge not found' });\r\n    }\r\n\r\n    await challenge.destroy();\r\n    res.status(200).json({ message: 'Challenge deleted successfully' });\r\n  } catch (error) {\r\n    console.error(\"Error during challenge deletion:\", error.message);\r\n    res.status(500).json({ error: error.message });\r\n  }\r\n};"]}