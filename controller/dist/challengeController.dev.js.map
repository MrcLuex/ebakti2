{"version":3,"sources":["challengeController.js"],"names":["Challenge","require","exports","createChallenge","req","res","body","title","description","due_date","challenge_image","create","newChallenge","status","json","message","challenge","console","error","getChallenges","findAll","challenges","updateChallenge","id","params","findByPk","update","deleteChallenge","destroy"],"mappings":"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","sourcesContent":["const Challenge = require('../models/Challenge');\r\n\r\n// Create Challenge\r\nexports.createChallenge = async (req, res) => {\r\n  const { title, description, due_date, challenge_image } = req.body;\r\n\r\n  try {\r\n    const newChallenge = await Challenge.create({\r\n      title,\r\n      description,\r\n      due_date,\r\n      challenge_image,\r\n    });\r\n\r\n    res.status(201).json({\r\n      message: 'Challenge created successfully',\r\n      challenge: newChallenge,\r\n    });\r\n  } catch (error) {\r\n    console.error(\"Error during challenge creation:\", error.message);\r\n    res.status(500).json({ error: error.message });\r\n  }\r\n};\r\n\r\n// Get All Challenges\r\nexports.getChallenges = async (req, res) => {\r\n  try {\r\n    const challenges = await Challenge.findAll();\r\n    res.status(200).json(challenges);\r\n  } catch (error) {\r\n    console.error(\"Error fetching challenges:\", error.message);\r\n    res.status(500).json({ error: error.message });\r\n  }\r\n};\r\n\r\n// Update Challenge\r\nexports.updateChallenge = async (req, res) => {\r\n  const { id } = req.params;\r\n  const { title, description, due_date, challenge_image } = req.body;\r\n\r\n  try {\r\n    const challenge = await Challenge.findByPk(id);\r\n    if (!challenge) {\r\n      return res.status(404).json({ error: 'Challenge not found' });\r\n    }\r\n\r\n    await challenge.update({\r\n      title,\r\n      description,\r\n      due_date,\r\n      challenge_image,\r\n    });\r\n\r\n    res.status(200).json({\r\n      message: 'Challenge updated successfully',\r\n      challenge,\r\n    });\r\n  } catch (error) {\r\n    console.error(\"Error during challenge update:\", error.message);\r\n    res.status(500).json({ error: error.message });\r\n  }\r\n};\r\n\r\n// Delete Challenge\r\nexports.deleteChallenge = async (req, res) => {\r\n  const { id } = req.params;\r\n\r\n  try {\r\n    const challenge = await Challenge.findByPk(id);\r\n    if (!challenge) {\r\n      return res.status(404).json({ error: 'Challenge not found' });\r\n    }\r\n\r\n    await challenge.destroy();\r\n    res.status(200).json({ message: 'Challenge deleted successfully' });\r\n  } catch (error) {\r\n    console.error(\"Error during challenge deletion:\", error.message);\r\n    res.status(500).json({ error: error.message });\r\n  }\r\n};"],"file":"challengeController.dev.js"}