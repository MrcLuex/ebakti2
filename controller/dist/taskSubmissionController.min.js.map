{"version":3,"sources":["taskSubmissionController.js"],"names":["TaskSubmission","require","exports","req","res","_req$body","task_id","user_id","submission_date","score","feedback","status","newSubmission","regeneratorRuntime","async","_context","prev","next","body","awrap","create","sent","abrupt","json","t0","message","error","stop","getTaskSubmissions","submissions","_context2","submission","console","id","_req$body2","_context3","params","findByPk","update","_context4","destroy"],"mappings":"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","file":"taskSubmissionController.min.js","sourcesContent":["// controllers/taskSubmissionController.js\r\nconst TaskSubmission = require('../models/TaskSubmission');\r\n\r\nexports.createTaskSubmission = async (req, res) => {\r\n    const { task_id, user_id, submission_date, score, feedback, status } = req.body;\r\n\r\n    try {\r\n        const newSubmission = await TaskSubmission.create({\r\n            task_id,\r\n            user_id,\r\n            submission_date,\r\n            score,\r\n            feedback,\r\n            status,\r\n        });\r\n\r\n        return res.status(201).json({\r\n            message: 'Task submission created successfully',\r\n            submission: newSubmission,\r\n        });\r\n    } catch (error) {\r\n        console.error(\"Error during task submission creation:\", error.message);\r\n        return res.status(500).json({ message: 'Terjadi kesalahan saat membuat pengumpulan tugas.', error });\r\n    }\r\n};\r\n\r\nexports.getTaskSubmissions = async (req, res) => {\r\n    try {\r\n        const submissions = await TaskSubmission.findAll();\r\n        return res.status(200).json(submissions);\r\n    } catch (error) {\r\n        console.error(\"Error fetching task submissions:\", error.message);\r\n        return res.status(500).json({ message: 'Terjadi kesalahan saat mengambil pengumpulan tugas.', error });\r\n    }\r\n};\r\n\r\nexports.updateTaskSubmission = async (req, res) => {\r\n    const { id } = req.params;\r\n    const { task_id, user_id, submission_date, score, feedback, status } = req.body;\r\n\r\n    try {\r\n        const submission = await TaskSubmission.findByPk(id);\r\n        if (!submission) {\r\n            return res.status(404).json({ message: 'Task submission not found' });\r\n        }\r\n\r\n        await submission.update({\r\n            task_id,\r\n            user_id,\r\n            submission_date,\r\n            score,\r\n            feedback,\r\n            status,\r\n        });\r\n\r\n        return res.status(200).json({\r\n            message: 'Task submission updated successfully',\r\n            submission,\r\n        });\r\n    } catch (error) {\r\n        console.error(\"Error during task submission update:\", error.message);\r\n        return res.status(500).json({ message: 'Terjadi kesalahan saat memperbarui pengumpulan tugas.', error });\r\n    }\r\n};\r\n\r\nexports.deleteTaskSubmission = async (req, res) => {\r\n    const { id } = req.params;\r\n\r\n    try {\r\n        const submission = await TaskSubmission.findByPk(id);\r\n        if (!submission) {\r\n            return res.status(404).json({ message: 'Task submission not found' });\r\n        }\r\n\r\n        await submission.destroy();\r\n        return res.status(200).json({ message: 'Task submission deleted successfully' });\r\n    } catch (error) {\r\n        console.error(\"Error during task submission deletion:\", error.message);\r\n        return res.status(500).json({ message: 'Terjadi kesalahan saat menghapus pengumpulan tugas.', error });\r\n    }\r\n};"]}