"use strict";var Period=require("../models/Period");exports.createPeriod=function(r,t){var n,s,a,o,u;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return n=r.body,s=n.period_name,a=n.start_date,o=n.end_date,e.prev=1,e.next=4,regeneratorRuntime.awrap(Period.create({period_name:s,start_date:a,end_date:o}));case 4:return u=e.sent,e.abrupt("return",t.status(201).json({message:"Period created successfully",period:u}));case 8:return e.prev=8,e.t0=e.catch(1),console.error("Error during period creation:",e.t0.message),e.abrupt("return",t.status(500).json({message:"Error creating period.",error:e.t0.message}));case 12:case"end":return e.stop()}},null,null,[[1,8]])},exports.getPeriods=function(e,r){var t;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,regeneratorRuntime.awrap(Period.findAll());case 3:return t=e.sent,e.abrupt("return",r.status(200).json(t));case 7:return e.prev=7,e.t0=e.catch(0),console.error("Error fetching periods:",e.t0.message),e.abrupt("return",r.status(500).json({message:"Error fetching periods.",error:e.t0.message}));case 11:case"end":return e.stop()}},null,null,[[0,7]])},exports.updatePeriod=function(r,t){var n,s,a,o,u,d;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return n=r.params.id,s=r.body,a=s.period_name,o=s.start_date,u=s.end_date,e.prev=2,e.next=5,regeneratorRuntime.awrap(Period.findByPk(n));case 5:if(d=e.sent){e.next=8;break}return e.abrupt("return",t.status(404).json({message:"Period not found"}));case 8:return e.next=10,regeneratorRuntime.awrap(d.update({period_name:a,start_date:o,end_date:u}));case 10:return e.abrupt("return",t.status(200).json({message:"Period updated successfully",period:d}));case 13:return e.prev=13,e.t0=e.catch(2),console.error("Error during period update:",e.t0.message),e.abrupt("return",t.status(500).json({message:"Error updating period.",error:e.t0.message}));case 17:case"end":return e.stop()}},null,null,[[2,13]])},exports.deletePeriod=function(r,t){var n,s;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return n=r.params.id,e.prev=1,e.next=4,regeneratorRuntime.awrap(Period.findByPk(n));case 4:if(s=e.sent){e.next=7;break}return e.abrupt("return",t.status(404).json({message:"Period not found"}));case 7:return e.next=9,regeneratorRuntime.awrap(s.destroy());case 9:return e.abrupt("return",t.status(200).json({message:"Period deleted successfully"}));case 12:return e.prev=12,e.t0=e.catch(1),console.error("Error during period deletion:",e.t0.message),e.abrupt("return",t.status(500).json({message:"Error deleting period.",error:e.t0.message}));case 16:case"end":return e.stop()}},null,null,[[1,12]])};
//# sourceMappingURL=periodController.min.js.map
