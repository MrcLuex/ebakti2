{"version":3,"sources":["medicalHistoryController.js"],"names":["MedicalHistory","require","exports","createMedicalHistory","req","res","body","user_id","medical_condition","medication","allergies","create","newHistory","status","json","message","history","console","error","getMedicalHistories","findAll","histories","updateMedicalHistory","id","params","findByPk","update","deleteMedicalHistory","destroy"],"mappings":"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","sourcesContent":["// controllers/medicalHistoryController.js\r\nconst MedicalHistory = require('../models/MedicalHistory');\r\n\r\nexports.createMedicalHistory = async (req, res) => {\r\n    const { user_id, medical_condition, medication, allergies } = req.body;\r\n\r\n    try {\r\n        const newHistory = await MedicalHistory.create({\r\n            user_id,\r\n            medical_condition,\r\n            medication,\r\n            allergies,\r\n        });\r\n\r\n        return res.status(201).json({\r\n            message: 'Medical history created successfully',\r\n            history: newHistory,\r\n        });\r\n    } catch (error) {\r\n        console.error(\"Error during medical history creation:\", error.message);\r\n        return res.status(500).json({ message: 'Terjadi kesalahan saat membuat riwayat medis.', error });\r\n    }\r\n};\r\n\r\nexports.getMedicalHistories = async (req, res) => {\r\n    try {\r\n        const histories = await MedicalHistory.findAll();\r\n        return res.status(200).json(histories);\r\n    } catch (error) {\r\n        console.error(\"Error fetching medical histories:\", error.message);\r\n        return res.status(500).json({ message: 'Terjadi kesalahan saat mengambil riwayat medis.', error });\r\n    }\r\n};\r\n\r\nexports.updateMedicalHistory = async (req, res) => {\r\n    const { id } = req.params;\r\n    const { medical_condition, medication, allergies } = req.body;\r\n\r\n    try {\r\n        const history = await MedicalHistory.findByPk(id);\r\n        if (!history) {\r\n            return res.status(404).json({ message: 'Medical history not found' });\r\n        }\r\n\r\n        await history.update({\r\n            medical_condition,\r\n            medication,\r\n            allergies,\r\n        });\r\n\r\n        return res.status(200).json({\r\n            message: 'Medical history updated successfully',\r\n            history,\r\n        });\r\n    } catch (error) {\r\n        console.error(\"Error during medical history update:\", error.message);\r\n        return res.status(500).json({ message: 'Terjadi kesalahan saat memperbarui riwayat medis.', error });\r\n    }\r\n};\r\n\r\nexports.deleteMedicalHistory = async (req, res) => {\r\n    const { id } = req.params;\r\n\r\n    try {\r\n        const history = await MedicalHistory.findByPk(id);\r\n        if (!history) {\r\n            return res.status(404).json({ message: 'Medical history not found' });\r\n        }\r\n\r\n        await history.destroy();\r\n        return res.status(200).json({ message: 'Medical history deleted successfully' });\r\n    } catch (error) {\r\n        console.error(\"Error during medical history deletion:\", error.message);\r\n        return res.status(500).json({ message: 'Terjadi kesalahan saat menghapus riwayat medis.', error });\r\n    }\r\n};"],"file":"medicalHistoryController.dev.js"}