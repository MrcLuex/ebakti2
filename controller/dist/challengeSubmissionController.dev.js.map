{"version":3,"sources":["challengeSubmissionController.js"],"names":["ChallengeSubmission","require","exports","createChallengeSubmission","req","res","body","challenge_id","user_id","submission_file","status","create","newSubmission","json","message","submission","console","error","getChallengeSubmissions","findAll","submissions","updateChallengeSubmission","id","params","findByPk","update","deleteChallengeSubmission","destroy"],"mappings":"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","sourcesContent":["const ChallengeSubmission = require('../models/ChallengeSubmission');\r\n\r\n// Create Challenge Submission\r\nexports.createChallengeSubmission = async (req, res) => {\r\n  const { challenge_id, user_id, submission_file, status } = req.body;\r\n\r\n  try {\r\n    const newSubmission = await ChallengeSubmission.create({\r\n      challenge_id,\r\n      user_id,\r\n      submission_file,\r\n      status,\r\n    });\r\n\r\n    res.status(201).json({\r\n      message: 'Challenge submission created successfully',\r\n      submission: newSubmission,\r\n    });\r\n  } catch (error) {\r\n    console.error(\"Error during challenge submission creation:\", error.message);\r\n    res.status(500).json({ error: error.message });\r\n  }\r\n};\r\n\r\n// Get All Challenge Submissions\r\nexports.getChallengeSubmissions = async (req, res) => {\r\n  try {\r\n    const submissions = await ChallengeSubmission.findAll();\r\n    res.status(200).json(submissions);\r\n  } catch (error) {\r\n    console.error(\"Error fetching challenge submissions:\", error.message);\r\n    res.status(500).json({ error: error.message });\r\n  }\r\n};\r\n\r\n// Update Challenge Submission\r\nexports.updateChallengeSubmission = async (req, res) => {\r\n  const { id } = req.params;\r\n  const { challenge_id, user_id, submission_file, status } = req.body;\r\n\r\n  try {\r\n    const submission = await ChallengeSubmission.findByPk(id);\r\n    if (!submission) {\r\n      return res.status(404).json({ error: 'Challenge submission not found' });\r\n    }\r\n\r\n    await submission.update({\r\n      challenge_id,\r\n      user_id,\r\n      submission_file,\r\n      status,\r\n    });\r\n\r\n    res.status(200).json({\r\n      message: 'Challenge submission updated successfully',\r\n      submission,\r\n    });\r\n  } catch (error) {\r\n    console.error(\"Error during challenge submission update:\", error.message);\r\n    res.status(500).json({ error: error.message });\r\n  }\r\n};\r\n\r\n// Delete Challenge Submission\r\nexports.deleteChallengeSubmission = async (req, res) => {\r\n  const { id } = req.params;\r\n\r\n  try {\r\n    const submission = await ChallengeSubmission.findByPk(id);\r\n    if (!submission) {\r\n      return res.status(404).json({ error: 'Challenge submission not found' });\r\n    }\r\n\r\n    await submission.destroy();\r\n    res.status(200).json({ message: 'Challenge submission deleted successfully' });\r\n  } catch (error) {\r\n    console.error(\"Error during challenge submission deletion:\", error.message);\r\n    res.status(500).json({ error: error.message });\r\n  }\r\n};"],"file":"challengeSubmissionController.dev.js"}