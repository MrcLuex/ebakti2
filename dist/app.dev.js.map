{"version":3,"sources":["app.js"],"names":["express","require","bodyParser","cors","dotenv","config","app","PORT","process","env","use","json","userRoutes","periodRoutes","taskRoutes","taskSubmissionRoutes","mentorRoutes","medicalHistoryRoutes","groupRoutes","finalEvaluationRoutes","challengeSubmissionRoutes","challengeRoutes","certificateRoutes","attendanceRoutes","listen","console","log"],"mappings":";;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMC,UAAU,GAAGD,OAAO,CAAC,aAAD,CAA1B;;AACA,IAAME,IAAI,GAAGF,OAAO,CAAC,MAAD,CAApB;;AACA,IAAMG,MAAM,GAAGH,OAAO,CAAC,QAAD,CAAtB,C,CAEA;;;AACAG,MAAM,CAACC,MAAP;AAEA,IAAMC,GAAG,GAAGN,OAAO,EAAnB;AACA,IAAMO,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYF,IAAZ,IAAoB,IAAjC,C,CAEA;;AACAD,GAAG,CAACI,GAAJ,CAAQP,IAAI,EAAZ;AACAG,GAAG,CAACI,GAAJ,CAAQR,UAAU,CAACS,IAAX,EAAR,E,CAEA;;AACA,IAAMC,UAAU,GAAGX,OAAO,CAAC,eAAD,CAA1B;;AACA,IAAMY,YAAY,GAAGZ,OAAO,CAAC,uBAAD,CAA5B;;AACA,IAAMa,UAAU,GAAGb,OAAO,CAAC,qBAAD,CAA1B;;AACA,IAAMc,oBAAoB,GAAGd,OAAO,CAAC,+BAAD,CAApC;;AACA,IAAMe,YAAY,GAAGf,OAAO,CAAC,uBAAD,CAA5B;;AACA,IAAMgB,oBAAoB,GAAGhB,OAAO,CAAC,+BAAD,CAApC;;AACA,IAAMiB,WAAW,GAAGjB,OAAO,CAAC,sBAAD,CAA3B;;AACA,IAAMkB,qBAAqB,GAAGlB,OAAO,CAAC,gCAAD,CAArC;;AACA,IAAMmB,yBAAyB,GAAGnB,OAAO,CAAC,oCAAD,CAAzC;;AACA,IAAMoB,eAAe,GAAGpB,OAAO,CAAC,0BAAD,CAA/B;;AACA,IAAMqB,iBAAiB,GAAGrB,OAAO,CAAC,4BAAD,CAAjC;;AACA,IAAMsB,gBAAgB,GAAGtB,OAAO,CAAC,2BAAD,CAAhC,C,CAEA;;;AACAK,GAAG,CAACI,GAAJ,CAAQ,YAAR,EAAsBE,UAAtB;AACAN,GAAG,CAACI,GAAJ,CAAQ,cAAR,EAAwBG,YAAxB;AACAP,GAAG,CAACI,GAAJ,CAAQ,YAAR,EAAsBI,UAAtB;AACAR,GAAG,CAACI,GAAJ,CAAQ,uBAAR,EAAiCK,oBAAjC;AACAT,GAAG,CAACI,GAAJ,CAAQ,cAAR,EAAwBM,YAAxB;AACAV,GAAG,CAACI,GAAJ,CAAQ,wBAAR,EAAkCO,oBAAlC;AACAX,GAAG,CAACI,GAAJ,CAAQ,aAAR,EAAuBQ,WAAvB;AACAZ,GAAG,CAACI,GAAJ,CAAQ,wBAAR,EAAkCS,qBAAlC;AACAb,GAAG,CAACI,GAAJ,CAAQ,4BAAR,EAAsCU,yBAAtC;AACAd,GAAG,CAACI,GAAJ,CAAQ,iBAAR,EAA2BW,eAA3B;AACAf,GAAG,CAACI,GAAJ,CAAQ,mBAAR,EAA6BY,iBAA7B;AACAhB,GAAG,CAACI,GAAJ,CAAQ,kBAAR,EAA4Ba,gBAA5B,E,CAEA;;AACAjB,GAAG,CAACkB,MAAJ,CAAWjB,IAAX,EAAiB,YAAM;AACnBkB,EAAAA,OAAO,CAACC,GAAR,qCAAyCnB,IAAzC;AACH,CAFD","sourcesContent":["const express = require('express');\r\nconst bodyParser = require('body-parser');\r\nconst cors = require('cors');\r\nconst dotenv = require('dotenv');\r\n\r\n// Load environment variables from .env file\r\ndotenv.config();\r\n\r\nconst app = express();\r\nconst PORT = process.env.PORT || 3000;\r\n\r\n// Middleware\r\napp.use(cors());\r\napp.use(bodyParser.json());\r\n\r\n// Import Routes\r\nconst userRoutes = require('./routes/user');\r\nconst periodRoutes = require('./routes/periodRoutes');\r\nconst taskRoutes = require('./routes/taskRoutes');\r\nconst taskSubmissionRoutes = require('./routes/taskSubmissionRoutes');\r\nconst mentorRoutes = require('./routes/mentorRoutes');\r\nconst medicalHistoryRoutes = require('./routes/medicalHistoryRoutes');\r\nconst groupRoutes = require('./routes/groupRoutes');\r\nconst finalEvaluationRoutes = require('./routes/finalEvaluationRoutes');\r\nconst challengeSubmissionRoutes = require('./routes/challengeSubmissionRoutes');\r\nconst challengeRoutes = require('./routes/challengeRoutes');\r\nconst certificateRoutes = require('./routes/certificateRoutes');\r\nconst attendanceRoutes = require('./routes/attendanceRoutes');\r\n\r\n// Use Routes\r\napp.use('/api/users', userRoutes);\r\napp.use('/api/periods', periodRoutes);\r\napp.use('/api/tasks', taskRoutes);\r\napp.use('/api/task-submissions', taskSubmissionRoutes);\r\napp.use('/api/mentors', mentorRoutes);\r\napp.use('/api/medical-histories', medicalHistoryRoutes);\r\napp.use('/api/groups', groupRoutes);\r\napp.use('/api/final-evaluations', finalEvaluationRoutes);\r\napp.use('/api/challenge-submissions', challengeSubmissionRoutes);\r\napp.use('/api/challenges', challengeRoutes);\r\napp.use('/api/certificates', certificateRoutes);\r\napp.use('/api/attendances', attendanceRoutes);\r\n\r\n// Start Server\r\napp.listen(PORT, () => {\r\n    console.log(`Server is running on port ${PORT}`);\r\n});"],"file":"app.dev.js"}